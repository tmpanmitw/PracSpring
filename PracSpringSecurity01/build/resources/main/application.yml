server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:h2:mem:testdb;MODE=MYSQL;

  thymeleaf:
    prefix : classpath:templates/
    suffix : .html
    cache : false

    #  datasource:
    #    driver-class-name: com.mysql.cj.jdbc.Driver
    #    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    #    username: cos
    #    password: cos1234

#  mvc:
#    view:
#      prefix: /templates/
#      suffix: .mustache

  jpa:
    hibernate:
      ddl-auto: create #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

#  security:
#    oauth2:
#      client:
#        registration:
#          google: # /oauth2/authorization/google ? ??? ???? ??.
#            client-id: ???
#            client-secret: ???
#            scope:
#              - email
#              - profile
#
#          facebook:
#            client-id: ???
#            client-secret: ???
#            scope:
#              - email
#              - public_profile
#
#          # ???? OAuth2.0 ?? ????? ???? provider ??? ????.
#          # ????? ???, ?? ???? ??? ????.
#          naver:
#            client-id: ???
#            client-secret: ???
#            scope:
#              - name
#              - email
#              - profile_image
#            client-name: Naver # ????? ??? ?? ????? ???? ?????.
#            authorization-grant-type: authorization_code
#            redirect-uri: http://localhost:8080/login/oauth2/code/naver
#
#        provider:
#          naver:
#            authorization-uri: https://nid.naver.com/oauth2.0/authorize
#            token-uri: https://nid.naver.com/oauth2.0/token
#            user-info-uri: https://openapi.naver.com/v1/nid/me
#            user-name-attribute: response # ????? json? response ???? ????.